import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as t,f as p,a as n}from"./app-BYQ2Xouv.js";const e={},o=n(`<h2 id="依赖安装" tabindex="-1"><a class="header-anchor" href="#依赖安装"><span>依赖安装</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> gulp-watch@5 <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="gulp插件简单使用举例" tabindex="-1"><a class="header-anchor" href="#gulp插件简单使用举例"><span>gulp插件简单使用举例</span></a></h2><p>gulpfile.js</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> series<span class="token punctuation">,</span> parallel<span class="token punctuation">,</span> src<span class="token punctuation">,</span> dest <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gulp&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> gulpLoadPlugins <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gulp-load-plugins&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> watch <span class="token operator">=</span> gulpLoadPlugins<span class="token punctuation">.</span>watch<span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">startWatch</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">watch</span><span class="token punctuation">(</span><span class="token string">&quot;code-origin/js/**/*.js&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// todo 需要执行对js文件的相关操作</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="更全面的gulp-watch使用方法" tabindex="-1"><a class="header-anchor" href="#更全面的gulp-watch使用方法"><span>更全面的Gulp-watch使用方法</span></a></h2><p>现在有两个文件目录，一个是code-origin(未压缩前的代码)，另一个是code-mini（压缩后的代码）</p><p>在开发阶段的时候，我的目的：</p><ol><li>我新增了一个文件，我希望该操作能同步到压缩后的文件中</li><li>我修改了一个文件，我希望该操作能同步到压缩后的文件中</li><li>我删除了一个文件，我希望该操作能同步到压缩后的文件中</li><li>我新增了一些文件，但这些文件不是html、js、css，此时我也希望该操作能同步到压缩后的文件中</li><li>我希望保持开发目录结构的清晰，我删除了一些文件夹，我希望该操作能同步到压缩后的文件中</li></ol><h3 id="文件目录结构-老样子" tabindex="-1"><a class="header-anchor" href="#文件目录结构-老样子"><span>文件目录结构（老样子）</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>├── code-origin // 原始入口文件
│   ├── html
│      ├── index.html 
│      ├── common.html 
│      ├── xxxxx.html
│   ├── css
│      ├── index.css 
│      ├── common.css 
│      ├── xxxxx.css
│   ├── js
│      ├── common
│         ├── jquery-3.6.0.min.js
│      ├── index.js 
│      ├── common.js 
│      ├── xxxxx.js
├── code-mini   // 经过Gulp处理打包后的文件
├── .babelrc.json
├── concat.map.json
├── node_modules
└── .gitignore
└── gulpfile.js 
└── package.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gulpfile-js配置" tabindex="-1"><a class="header-anchor" href="#gulpfile-js配置"><span>gulpfile.js配置</span></a></h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p>为了基本的演示，去除了相关文件打包操作</p></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> series<span class="token punctuation">,</span> parallel<span class="token punctuation">,</span> src<span class="token punctuation">,</span> dest <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gulp&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> gulpLoadPlugins <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gulp-load-plugins&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> watch <span class="token operator">=</span> gulpLoadPlugins<span class="token punctuation">.</span>watch<span class="token punctuation">;</span>

<span class="token keyword">const</span> del <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;del&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> enterFileName <span class="token operator">=</span> <span class="token string">&#39;code-origin&#39;</span>
<span class="token keyword">const</span> exportFileName <span class="token operator">=</span> <span class="token string">&#39;code-mini&#39;</span>

<span class="token comment">// 清除文件</span>
<span class="token keyword">const</span> <span class="token function-variable function">clean</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">del</span><span class="token punctuation">(</span>exportFileName<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">force</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 复制文件/文件夹至目标目录</span>
<span class="token keyword">const</span> <span class="token function-variable function">copy</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">enter<span class="token punctuation">,</span> output<span class="token punctuation">,</span> base <span class="token operator">=</span> enterFileName</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// base的作用是为了映射到输出目录时能和原始目录结构保持一致性</span>
    <span class="token keyword">return</span> <span class="token function">src</span><span class="token punctuation">(</span>enter<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">base</span><span class="token operator">:</span> base <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">dest</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 开始执行watch监听</span>
<span class="token keyword">const</span> <span class="token function-variable function">startWatch</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 监听开发环境代码下的所有文件夹下的所有文件</span>
  <span class="token comment">// 事件解析</span>
  <span class="token comment">// add：文件新增 change：文件修改 unlink：文件删除 addDir：新增文件夹 unlinkDir：文件夹删除了</span>

  <span class="token comment">// 此处是对文件直接进行了 copy操作，未进行相关的代码压缩 如有需要可以自行配置</span>
  <span class="token comment">// 为什么加了 .on(finish)操作？这是为了在该操作完成后可以在里面执行浏览器刷新操作 配合browser-sync（此处暂时不演示，太简单了）</span>
  <span class="token function">watch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>enterFileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/**</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 如果需要启用代码压缩等，可以通过path文件后缀判断文件类型来执行相应的操作</span>
      <span class="token function">copy</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>exportFileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;finish&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this is add finish&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;change&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">copy</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>exportFileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;finish&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this is change finish&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;unlink&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> miniFilePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>enterFileName<span class="token punctuation">,</span> exportFileName<span class="token punctuation">)</span>
      <span class="token function">del</span><span class="token punctuation">(</span>miniFilePath<span class="token punctuation">)</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this is unlink finish&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;addDir&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">addDir </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      <span class="token function">copy</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>exportFileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;finish&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this is addDir finish&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;unlinkDir&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">unlinkDir </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> miniFilePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>enterFileName<span class="token punctuation">,</span> exportFileName<span class="token punctuation">)</span>
      <span class="token function">del</span><span class="token punctuation">(</span>miniFilePath<span class="token punctuation">)</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this is unlinkDir finish&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

exports<span class="token punctuation">.</span>startWatch <span class="token operator">=</span> startWatch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加运行命令" tabindex="-1"><a class="header-anchor" href="#添加运行命令"><span>添加运行命令</span></a></h3><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;startWatch&quot;</span><span class="token operator">:</span> <span class="token string">&quot;gulp startWatch&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="执行运行命令" tabindex="-1"><a class="header-anchor" href="#执行运行命令"><span>执行运行命令</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>npm run startWatch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="效果演示" tabindex="-1"><a class="header-anchor" href="#效果演示"><span>效果演示</span></a></h3>`,19),c=n(`<h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>利用gulp-watch插件能监听文件修改，新增、删除等。此处只是演示了文件变化后对文件的copy操作。</p><p>需要对文件采用更多的操作可以在相应的监听事件中对文件判断来执行不同的操作，这样的情况下就需要写成这种</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 原始的js压缩 路径写死</span>
<span class="token keyword">const</span> <span class="token function-variable function">miniJs</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">src</span><span class="token punctuation">(</span>
    <span class="token punctuation">[</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>enterFileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/**/*.js</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">!</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>enterFileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/js/common/*.js</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">!</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>enterFileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/js/*.min.js</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">babel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">mangle</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// .pipe(stripDebug())</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>exportFileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// watch事件后的js压缩方法</span>
<span class="token comment">// 只是需要一个入口文件，因为输出文件固定了，就没必要在加动态参数</span>
<span class="token keyword">const</span> <span class="token function-variable function">miniWatchJs</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">entry</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">src</span><span class="token punctuation">(</span>entry<span class="token punctuation">)</span> <span class="token comment">// 动态入口文件</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">babel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">mangle</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// .pipe(stripDebug())</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>exportFileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 然后在watch中调用</span>
<span class="token comment">// miniWatchJs(path)() 同copy(path, \`\${exportFileName}\`)()的调用</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样的优点就是只对单一文件做压缩处理，而不是所有的文件，就会提高效率。如果改动的文件需要影响到其他文件(如需要concat的js)，那就需要再去执行concat相关的操作</p>`,5);function i(l,u){return a(),t("div",null,[o,p(` <iframe
  src="/audios/code-gulp-watch.mp4"
  scrolling="no"
  border="0"
  frameborder="no"
  framespacing="0"
  allowfullscreen="true">
</iframe> `),c])}const d=s(e,[["render",i],["__file","09-gulp-watch.html.vue"]]),m=JSON.parse('{"path":"/pack/Gulp/09-gulp-watch.html","title":"Gulp配置篇--gulp-watch","lang":"zh-CN","frontmatter":{"title":"Gulp配置篇--gulp-watch","excerpt":"学而不思则罔，思而不学则殆。-- 孔子","sidebar":true,"tag":["Gulp"],"category":["Gulp"],"description":"依赖安装 gulp插件简单使用举例 gulpfile.js 更全面的Gulp-watch使用方法 现在有两个文件目录，一个是code-origin(未压缩前的代码)，另一个是code-mini（压缩后的代码） 在开发阶段的时候，我的目的： 我新增了一个文件，我希望该操作能同步到压缩后的文件中 我修改了一个文件，我希望该操作能同步到压缩后的文件中 我删除...","head":[["meta",{"property":"og:url","content":"https://arisemarcher.github.io/blog/blog/pack/Gulp/09-gulp-watch.html"}],["meta",{"property":"og:site_name","content":"御神"}],["meta",{"property":"og:title","content":"Gulp配置篇--gulp-watch"}],["meta",{"property":"og:description","content":"依赖安装 gulp插件简单使用举例 gulpfile.js 更全面的Gulp-watch使用方法 现在有两个文件目录，一个是code-origin(未压缩前的代码)，另一个是code-mini（压缩后的代码） 在开发阶段的时候，我的目的： 我新增了一个文件，我希望该操作能同步到压缩后的文件中 我修改了一个文件，我希望该操作能同步到压缩后的文件中 我删除..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-17T10:31:16.000Z"}],["meta",{"property":"article:tag","content":"Gulp"}],["meta",{"property":"article:modified_time","content":"2024-03-17T10:31:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Gulp配置篇--gulp-watch\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-17T10:31:16.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"依赖安装","slug":"依赖安装","link":"#依赖安装","children":[]},{"level":2,"title":"gulp插件简单使用举例","slug":"gulp插件简单使用举例","link":"#gulp插件简单使用举例","children":[]},{"level":2,"title":"更全面的Gulp-watch使用方法","slug":"更全面的gulp-watch使用方法","link":"#更全面的gulp-watch使用方法","children":[{"level":3,"title":"文件目录结构（老样子）","slug":"文件目录结构-老样子","link":"#文件目录结构-老样子","children":[]},{"level":3,"title":"gulpfile.js配置","slug":"gulpfile-js配置","link":"#gulpfile-js配置","children":[]},{"level":3,"title":"添加运行命令","slug":"添加运行命令","link":"#添加运行命令","children":[]},{"level":3,"title":"执行运行命令","slug":"执行运行命令","link":"#执行运行命令","children":[]},{"level":3,"title":"效果演示","slug":"效果演示","link":"#效果演示","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1710142952000,"updatedTime":1710671476000,"contributors":[{"name":"arisemarcher","email":"2543061999@qq.com","commits":3}]},"readingTime":{"minutes":3.58,"words":1074},"filePathRelative":"pack/Gulp/09-gulp-watch.md","localizedDate":"2024年3月11日","autoDesc":true}');export{d as comp,m as data};
