import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as l,c as i,b as t}from"./app-DdMks_IY.js";const o="/blog/assets/images/flex/flex001.png",a="/blog/assets/images/flex/flex002.png",c={},s=t(`<p>Flexible Box模型，简称flexbox。可以简便、完整、响应式地实现各种页面布局。它是一种一维的布局模型。</p><h2 id="flex布局使用" tabindex="-1"><a class="header-anchor" href="#flex布局使用"><span>flex布局使用</span></a></h2><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.flex-wrapper</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> // 或者是行业元素的 inline-flex
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当使用flex布局后，子元素的float、clear和vertical-align属性将失效。</p><h2 id="flex概念" tabindex="-1"><a class="header-anchor" href="#flex概念"><span>flex概念</span></a></h2><p>flex布局由容器和该容器内的子项目组成，当声明一个容器为flex布局时，在脑海中就该想到它的两根轴线。如下图所示：</p><p><img src="`+o+'" alt="轴线示例图一" width="500" height="300" loading="lazy"><img src="'+a+'" alt="轴线示例图二" width="500" height="300" loading="lazy"></p><h2 id="容器的属性" tabindex="-1"><a class="header-anchor" href="#容器的属性"><span>容器的属性</span></a></h2><p>当设置一个容器的<code>display</code>属性值为<code>flex</code>或<code>inline-flex</code>是，容器内的子元素会变成flex元素。 初始值为：</p><ul><li>元素水平排列（<code>flex-direction</code>属性的初始值是<code>row</code>）</li><li>元素从主轴的起始线开始。</li><li>元素不会在主维度方向拉伸，但是可以缩小</li><li>元素被拉伸来填充交叉轴大小</li><li><code>flex-basis</code>属性为<code>auto</code>。</li><li><code>flex-wrap</code>属性为<code>nowrap</code></li></ul><p>容器有以下属性：</p><ul><li>flex-direction：更改子元素的排列方向 <ul><li><code>flex-direction: row</code>：子元素水平排列，从左至右，起始为左，终止为右。</li><li><code>flex-direction: row-reverse</code>：子元素水平排列反转，从右至左，起始为右，终止为左。</li><li><code>flex-direction: column</code>：子元素纵向排列，从上至下，起始为上，终止为下。</li><li><code>flex-direction: column-reverse</code>：子元素纵向排列反转，从下至上，起始为下，终止为上。</li></ul></li><li>flex-wrap：确定子元素的换行方式 <ul><li><code>flex-wrap: nowrap</code>：默认不换行</li><li><code>flex-wrap: wrap</code>：换行</li></ul></li><li>flex-flow：<code>flex-direction</code> 和 <code>flex-wrap</code> 组合为简写属性 <ul><li>第一个值为<code>flex-direction</code></li><li>第二个值为<code>flex-wrap</code></li></ul></li><li>justify-content：设置子元素的主轴对齐方式 <ul><li><code>justify-content: stretch</code>：果元素沿主轴的组合尺寸小于对齐容器的尺寸，任何尺寸设置为 auto 的元素都会等比例地增加其尺寸（而不是按比例增加），同时仍然遵守由 max-height/max-width（或相应功能）施加的约束，以便沿主轴完全填充对齐容器的组合尺寸。</li><li><code>justify-content: flex-start</code>：子元素紧密排列主轴的起始侧</li><li><code>justify-content: flex-end</code>：子元素紧密排列主轴的终止侧</li><li><code>justify-content: center</code>：伸缩元素向每行中点排列。每行第一个元素到行首的距离将与每行最后一个元素到行尾的距离相同。</li><li><code>justify-content: space-around</code>：在每行上均匀分配弹性元素。相邻元素间距离相同。每行第一个元素到行首的距离和每行最后一个元素到行尾的距离将会是相邻元素之间距离的一半。</li><li><code>justify-content: space-between</code>：在每行上均匀分配弹性元素。相邻元素间距离相同。每行第一个元素与行首对齐，每行最后一个元素与行尾对齐。</li><li><code>justify-content: space-evenly</code>：flex 项都沿着主轴均匀分布在指定的对齐容器中。相邻 flex 项之间的间距，主轴起始位置到第一个 flex 项的间距，主轴结束位置到最后一个 flex 项的间距，都完全一样。</li></ul></li><li>align-items：设置子元素的交叉轴对齐方式 <ul><li><code>align-items: flex-start</code>：将元素与flex容器的交叉轴起始对齐</li><li><code>align-items: flex-end</code>：将元素与flex容器的交叉轴终止对齐</li><li><code>align-items: center</code>：将元素与flex容器的交叉轴居中对齐</li><li><code>align-items: stretch</code>：子元素未设置高度或为auto，将占满整个容器</li><li><code>align-items: baseline</code>：子元素基于第一个元素文字的基线对齐</li></ul></li></ul><h2 id="子项目的属性" tabindex="-1"><a class="header-anchor" href="#子项目的属性"><span>子项目的属性</span></a></h2><ul><li>order：按照数字大小设置每个子元素的排列方式。</li><li>flex-grow: 定义子元素的放大比例，默认为0。即使存在剩余空间，也不放大</li><li>flex-shrink: 定义子元素的缩小比例，默认为1，如果空间不足，将缩小</li><li>flex-basis: 设置子元素原始所占主轴空间的大小（宽度）</li><li>flex：设置放大，缩小和原始大小的简写。</li><li>align-self：单独设置特定元素的对齐方式。会覆盖容器align-items，属性值align-items一致，除了auto。</li></ul>',14),n=[s];function r(d,f){return l(),i("div",null,n)}const m=e(c,[["render",r],["__file","flex布局.html.vue"]]),g=JSON.parse('{"path":"/web/Css/flex%E5%B8%83%E5%B1%80.html","title":"Css-flex布局","lang":"zh-CN","frontmatter":{"title":"Css-flex布局","icon":"object-group","excerpt":"人生下来不是为了拖着锁链，而是为了展开双翼。-- 雨果（法国）","category":["Css"],"tag":["基础"],"description":"Flexible Box模型，简称flexbox。可以简便、完整、响应式地实现各种页面布局。它是一种一维的布局模型。 flex布局使用 当使用flex布局后，子元素的float、clear和vertical-align属性将失效。 flex概念 flex布局由容器和该容器内的子项目组成，当声明一个容器为flex布局时，在脑海中就该想到它的两根轴线。如下...","head":[["meta",{"property":"og:url","content":"https://arisemarcher.github.io/blog/blog/web/Css/flex%E5%B8%83%E5%B1%80.html"}],["meta",{"property":"og:site_name","content":"御神"}],["meta",{"property":"og:title","content":"Css-flex布局"}],["meta",{"property":"og:description","content":"Flexible Box模型，简称flexbox。可以简便、完整、响应式地实现各种页面布局。它是一种一维的布局模型。 flex布局使用 当使用flex布局后，子元素的float、clear和vertical-align属性将失效。 flex概念 flex布局由容器和该容器内的子项目组成，当声明一个容器为flex布局时，在脑海中就该想到它的两根轴线。如下..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://arisemarcher.github.io/blog/blog/assets/images/flex/flex001.png =500x300"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-07T09:53:11.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Css-flex布局"}],["meta",{"property":"article:tag","content":"基础"}],["meta",{"property":"article:modified_time","content":"2024-03-07T09:53:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Css-flex布局\\",\\"image\\":[\\"https://arisemarcher.github.io/blog/blog/assets/images/flex/flex001.png =500x300\\",\\"https://arisemarcher.github.io/blog/blog/assets/images/flex/flex002.png =500x300\\"],\\"dateModified\\":\\"2024-03-07T09:53:11.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"flex布局使用","slug":"flex布局使用","link":"#flex布局使用","children":[]},{"level":2,"title":"flex概念","slug":"flex概念","link":"#flex概念","children":[]},{"level":2,"title":"容器的属性","slug":"容器的属性","link":"#容器的属性","children":[]},{"level":2,"title":"子项目的属性","slug":"子项目的属性","link":"#子项目的属性","children":[]}],"git":{"createdTime":1709801823000,"updatedTime":1709805191000,"contributors":[{"name":"arisemarcher","email":"2543061999@qq.com","commits":2}]},"readingTime":{"minutes":3.83,"words":1148},"filePathRelative":"web/Css/flex布局.md","localizedDate":"2024年3月7日","autoDesc":true}');export{m as comp,g as data};
