import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as l,c as o,b as n,d as s,e,a as i}from"./app-D2ePHc3u.js";const r="/blog/assets/images/gulp/browserify.png",c={},u=n("h2",{id:"插件介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#插件介绍"},[n("span",null,"插件介绍")])],-1),d={href:"https://github.com/browserify/browserify",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/babel/babelify",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/hughsk/vinyl-buffer",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/hughsk/vinyl-source-stream",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.babeljs.cn/docs/babel-preset-env",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.babeljs.cn/docs/babel-core",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.babeljs.cn/docs/babel-plugin-transform-runtime",target:"_blank",rel:"noopener noreferrer"},f={href:"https://www.babeljs.cn/docs/babel-plugin-transform-runtime",target:"_blank",rel:"noopener noreferrer"},y={href:"https://www.digitalocean.com/community/tutorials/getting-started-with-browserify#toc-browserify-transforms",target:"_blank",rel:"noopener noreferrer"},w=i(`<h2 id="文件目录结构" tabindex="-1"><a class="header-anchor" href="#文件目录结构"><span>文件目录结构</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>├── code-origin // 原始入口文件
│   ├── css
│      ├── index.css 
│      ├── other.css 
│      ├── xxxxx.css
│   ├── js
│      ├── index.js 
│      ├── other.js 
│      ├── xxxxx.js
├── code-mini   // 经过Gulp处理打包后的文件
├── node_modules
└── .gitignore
└── gulpfile.js 
└── package.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关依赖" tabindex="-1"><a class="header-anchor" href="#相关依赖"><span>相关依赖</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>npm install gulp-babel@8 @babel/core@7 @babel/preset-env@7 @babel/plugin-transform-runtime@7 -D
npm install @babel/runtime-corejs3 --save

npm install browserify@17 babelify@10 vinyl-buffer@1 vinyl-source-stream@2 --save-dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="gulpfile-js-配置" tabindex="-1"><a class="header-anchor" href="#gulpfile-js-配置"><span>gulpfile.js 配置</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> series<span class="token punctuation">,</span> parallel<span class="token punctuation">,</span> src<span class="token punctuation">,</span> dest <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gulp&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> gulpLoadPlugins <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gulp-load-plugins&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> uglify <span class="token operator">=</span> gulpLoadPlugins<span class="token punctuation">.</span>uglify<span class="token punctuation">;</span>
<span class="token keyword">const</span> browserify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;browserify&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> babelify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;babelify&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;vinyl-source-stream&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> buffer     <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;vinyl-buffer&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">bundle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">browserify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">entries</span><span class="token operator">:</span> <span class="token string">&#39;code-origin/js/index.js&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span>babelify<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@babel/preset-env&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">[</span><span class="token string">&quot;@babel/plugin-transform-runtime&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;absoluteRuntime&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;corejs&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;helpers&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;regenerator&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;7.18.10&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">]</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">bundle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Start bundle</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token string">&#39;index.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 入口文件名称</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 转换为gulp识别的管道</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">mangle</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">&#39;code-mini/js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

exports<span class="token punctuation">.</span>bundle <span class="token operator">=</span> bundle
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="package-json中新增scripts命令" tabindex="-1"><a class="header-anchor" href="#package-json中新增scripts命令"><span>package.json中新增scripts命令</span></a></h2><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;bundle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;gulp bundle&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="运行命令" tabindex="-1"><a class="header-anchor" href="#运行命令"><span>运行命令</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> run bundle
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="效果展示" tabindex="-1"><a class="header-anchor" href="#效果展示"><span>效果展示</span></a></h2><h3 id="未压缩前js文件示例-是的-你没有看错-就是验证下includes兼容性" tabindex="-1"><a class="header-anchor" href="#未压缩前js文件示例-是的-你没有看错-就是验证下includes兼容性"><span>未压缩前Js文件示例（是的，你没有看错，就是验证下includes兼容性）</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;apple&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;origin&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;other&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> fruitName <span class="token operator">=</span> <span class="token string">&#39;banner&#39;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>fruitName<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="经过bundle处理的压缩后的代码" tabindex="-1"><a class="header-anchor" href="#经过bundle处理的压缩后的代码"><span>经过bundle处理的压缩后的代码</span></a></h3><p>很大，如下图，望不到底部 <img src="`+r+'" alt="示例" width="500" height="300" loading="lazy"></p><p>虽然很大，但用html引入该js是可以正常在浏览器上运行的，当然，包括IE。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>当一个js正常开发下未通过require引入其他js模块，但是使用了ES6+以上的语法，可用通过browserify+babel和babel其他的工具和集成来实现语法向ES5兼容，</p><p>如果该js需要引入其他的js文件，此时也需要用同样的方法（browserify+babel）处理该文件，这样子就可以引入了。</p><p>值得注意的是这里不支持按需引入。即tree-shaking</p></div><h2 id="其他实现方式对比" tabindex="-1"><a class="header-anchor" href="#其他实现方式对比"><span>其他实现方式对比</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>此处尝试了通过html引入polyfill.min.js(102.11KB)来实现ES6+的相关语法， 那么就不对js使用babel处理，直接使用uglify的话js代码会报错（不能识别const语法等）， 故而：不对该js处理先引入polyfill.min.js再引入带有es6+的语法，如果语法中有（const 声明，模板字符串、includes语法等），都是OK的，然而尝试了Class语法则会报错。</p><p>因此，最终还是采用browserify实现语法兼容是最理想的，虽然多出来很多的兼容语法，但这些都是当前文件中用到的（也算按需压缩引入了），压缩之后也才20多KB（简单的示例语法），而且在H5的单个文件这个大小还算可取。</p></div>',20);function j(_,x){const a=p("ExternalLinkIcon");return l(),o("div",null,[u,n("ul",null,[n("li",null,[s("browserify 可以让你使用类似于 node 的 require() 的方式来组织浏览器端的 Javascript 代码，通过预编译让前端 Javascript 可以直接使用 Node NPM 安装的一些库。"),n("a",d,[s("传送门"),e(a)])]),n("li",null,[s("babelify 类似 babel-loader，用于webpack和browserify等构建工具中 "),n("a",b,[s("传送门"),e(a)])]),n("li",null,[s("vinyl-buffer 将流式文件转换为使用缓冲区。"),n("a",k,[s("传送门"),e(a)])]),n("li",null,[s("vinyl-source-stream 在gulp或vinyl pipelines中使用常规文本流，使得与现有npm流生态系统实现更好的互操作性 "),n("a",v,[s("传送门"),e(a)])]),n("li",null,[s("@babel/preset-env "),n("a",m,[s("传送门"),e(a)])]),n("li",null,[s("@babel/core "),n("a",g,[s("传送门"),e(a)])]),n("li",null,[s("@babel/plugin-transform-runtime "),n("a",h,[s("传送门"),e(a)])]),n("li",null,[s("@babel/runtime-corejs3 corejs版本，支持数组includes等 "),n("a",f,[s("传送门"),e(a)])])]),n("p",null,[n("a",y,[s("参考网站"),e(a)])]),w])}const G=t(c,[["render",j],["__file","06-gulp-browserify.html.vue"]]),J=JSON.parse('{"path":"/pack/Gulp/06-gulp-browserify.html","title":"Gulp配置篇--js-browserify+babel","lang":"zh-CN","frontmatter":{"title":"Gulp配置篇--js-browserify+babel","excerpt":"少年易学老难成，一寸光阴不可轻。-- 朱熹","sidebar":true,"tag":["Gulp"],"category":["Gulp"],"description":"插件介绍 browserify 可以让你使用类似于 node 的 require() 的方式来组织浏览器端的 Javascript 代码，通过预编译让前端 Javascript 可以直接使用 Node NPM 安装的一些库。传送门 babelify 类似 babel-loader，用于webpack和browserify等构建工具中 传送门 vinyl...","head":[["meta",{"property":"og:url","content":"https://arisemarcher.github.io/blog/blog/pack/Gulp/06-gulp-browserify.html"}],["meta",{"property":"og:site_name","content":"御神"}],["meta",{"property":"og:title","content":"Gulp配置篇--js-browserify+babel"}],["meta",{"property":"og:description","content":"插件介绍 browserify 可以让你使用类似于 node 的 require() 的方式来组织浏览器端的 Javascript 代码，通过预编译让前端 Javascript 可以直接使用 Node NPM 安装的一些库。传送门 babelify 类似 babel-loader，用于webpack和browserify等构建工具中 传送门 vinyl..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://arisemarcher.github.io/blog/blog/assets/images/gulp/browserify.png =500x300"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-17T10:31:16.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Gulp配置篇--js-browserify+babel"}],["meta",{"property":"article:tag","content":"Gulp"}],["meta",{"property":"article:modified_time","content":"2024-03-17T10:31:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Gulp配置篇--js-browserify+babel\\",\\"image\\":[\\"https://arisemarcher.github.io/blog/blog/assets/images/gulp/browserify.png =500x300\\"],\\"dateModified\\":\\"2024-03-17T10:31:16.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"插件介绍","slug":"插件介绍","link":"#插件介绍","children":[]},{"level":2,"title":"文件目录结构","slug":"文件目录结构","link":"#文件目录结构","children":[]},{"level":2,"title":"相关依赖","slug":"相关依赖","link":"#相关依赖","children":[]},{"level":2,"title":"gulpfile.js 配置","slug":"gulpfile-js-配置","link":"#gulpfile-js-配置","children":[]},{"level":2,"title":"package.json中新增scripts命令","slug":"package-json中新增scripts命令","link":"#package-json中新增scripts命令","children":[]},{"level":2,"title":"运行命令","slug":"运行命令","link":"#运行命令","children":[]},{"level":2,"title":"效果展示","slug":"效果展示","link":"#效果展示","children":[{"level":3,"title":"未压缩前Js文件示例（是的，你没有看错，就是验证下includes兼容性）","slug":"未压缩前js文件示例-是的-你没有看错-就是验证下includes兼容性","link":"#未压缩前js文件示例-是的-你没有看错-就是验证下includes兼容性","children":[]},{"level":3,"title":"经过bundle处理的压缩后的代码","slug":"经过bundle处理的压缩后的代码","link":"#经过bundle处理的压缩后的代码","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"其他实现方式对比","slug":"其他实现方式对比","link":"#其他实现方式对比","children":[]}],"git":{"createdTime":1710142952000,"updatedTime":1710671476000,"contributors":[{"name":"arisemarcher","email":"2543061999@qq.com","commits":3}]},"readingTime":{"minutes":2.82,"words":846},"filePathRelative":"pack/Gulp/06-gulp-browserify.md","localizedDate":"2024年3月11日","autoDesc":true}');export{G as comp,J as data};
