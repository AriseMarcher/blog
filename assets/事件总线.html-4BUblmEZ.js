import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-g_crpGbg.js";const p={},e=t(`<p>实现一个基础的事件总线</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">EventBus</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>eventMap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">on</span> <span class="token punctuation">(</span><span class="token parameter">eventName<span class="token punctuation">,</span> eventFn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> eventFns <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>eventMap<span class="token punctuation">[</span>eventName<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>eventFns<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      eventFns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>eventMap<span class="token punctuation">[</span>eventName<span class="token punctuation">]</span> <span class="token operator">=</span> eventFns
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>eventMap<span class="token punctuation">[</span>eventName<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>eventFn<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">emit</span><span class="token punctuation">(</span><span class="token parameter">eventName<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> eventFns <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>eventMap<span class="token punctuation">[</span>eventName<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>eventFns<span class="token punctuation">)</span> <span class="token keyword">return</span>
    eventFns<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">fn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  
  <span class="token function">off</span><span class="token punctuation">(</span><span class="token parameter">eventName<span class="token punctuation">,</span> eventFn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> eventFns <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>eventMap<span class="token punctuation">[</span>eventName<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>eventFns<span class="token punctuation">)</span> <span class="token keyword">return</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> eventFns<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> fn <span class="token operator">=</span> eventFns<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>fn <span class="token operator">===</span> eventFn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        eventFns<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">break</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">if</span><span class="token punctuation">(</span>eventFns<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">delete</span> <span class="token keyword">this</span><span class="token punctuation">.</span>eventMap<span class="token punctuation">[</span>eventName<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">clear</span><span class="token punctuation">(</span><span class="token parameter">eventName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">delete</span> <span class="token keyword">this</span><span class="token punctuation">.</span>eventMap<span class="token punctuation">[</span>eventName<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),o=[e];function c(u,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","事件总线.html.vue"]]),d=JSON.parse('{"path":"/web/JavaScript/%E4%BA%8B%E4%BB%B6%E6%80%BB%E7%BA%BF.html","title":"事件总线","lang":"zh-CN","frontmatter":{"title":"事件总线","icon":"object-group","excerptLength":100,"category":["JavaScript"],"tag":["基础"],"description":"实现一个基础的事件总线","head":[["meta",{"property":"og:url","content":"https://arisemarcher.github.io/blog/blog/web/JavaScript/%E4%BA%8B%E4%BB%B6%E6%80%BB%E7%BA%BF.html"}],["meta",{"property":"og:site_name","content":"御神"}],["meta",{"property":"og:title","content":"事件总线"}],["meta",{"property":"og:description","content":"实现一个基础的事件总线"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-10T06:51:30.000Z"}],["meta",{"property":"article:tag","content":"基础"}],["meta",{"property":"article:modified_time","content":"2024-04-10T06:51:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"事件总线\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-10T06:51:30.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1712731890000,"updatedTime":1712731890000,"contributors":[{"name":"arisemarcher","email":"2543061999@qq.com","commits":1}]},"readingTime":{"minutes":0.34,"words":101},"filePathRelative":"web/JavaScript/事件总线.md","localizedDate":"2024年4月10日","excerpt":"<p>实现一个基础的事件总线</p>\\n<div class=\\"language-javascript\\" data-ext=\\"js\\" data-title=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">EventBus</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function\\">constructor</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>eventMap <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token function\\">on</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">eventName<span class=\\"token punctuation\\">,</span> eventFn</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">let</span> eventFns <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>eventMap<span class=\\"token punctuation\\">[</span>eventName<span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>eventFns<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      eventFns <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n      <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>eventMap<span class=\\"token punctuation\\">[</span>eventName<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> eventFns\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>eventMap<span class=\\"token punctuation\\">[</span>eventName<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>eventFn<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token function\\">emit</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">eventName<span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">...</span>args</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">let</span> eventFns <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>eventMap<span class=\\"token punctuation\\">[</span>eventName<span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>eventFns<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span>\\n    eventFns<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">fn</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token function\\">fn</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">...</span>args<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  \\n  <span class=\\"token function\\">off</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">eventName<span class=\\"token punctuation\\">,</span> eventFn</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">let</span> eventFns <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>eventMap<span class=\\"token punctuation\\">[</span>eventName<span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>eventFns<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> eventFns<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">const</span> fn <span class=\\"token operator\\">=</span> eventFns<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span>\\n      <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>fn <span class=\\"token operator\\">===</span> eventFn<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        eventFns<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">splice</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">break</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    \\n    <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>eventFns<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">===</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">delete</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>eventMap<span class=\\"token punctuation\\">[</span>eventName<span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token function\\">clear</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">eventName</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">delete</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>eventMap<span class=\\"token punctuation\\">[</span>eventName<span class=\\"token punctuation\\">]</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{r as comp,d as data};
