import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-Bo7iuh3n.js";const p="/blog/assets/images/gulp/concat-mini.png",e={},o=t(`<h2 id="依赖安装" tabindex="-1"><a class="header-anchor" href="#依赖安装"><span>依赖安装</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> gulp-concat@2 gulp-rename@2 <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="concat插件简单使用举例" tabindex="-1"><a class="header-anchor" href="#concat插件简单使用举例"><span>concat插件简单使用举例</span></a></h2><p>gulpfile.js</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> series<span class="token punctuation">,</span> parallel<span class="token punctuation">,</span> src<span class="token punctuation">,</span> dest <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gulp&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> gulpLoadPlugins <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gulp-load-plugins&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> concat <span class="token operator">=</span> gulpLoadPlugins<span class="token punctuation">.</span>concat<span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">concatJs</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">cb</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 需要合并的文件 数组形式 那个文件在前就在合并后的文件前面</span>
  <span class="token keyword">return</span> <span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;code-origin/js/common.js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;code-origin/js/index.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">rename</span><span class="token punctuation">(</span><span class="token string">&#39;common-index.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 取一个新的名称</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">&#39;code-mini/js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 输出地址</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="续接-07-gulp-babel-jquery" tabindex="-1"><a class="header-anchor" href="#续接-07-gulp-babel-jquery"><span>续接 07-gulp-babel-jquery</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>目的：</p><p>1：通过配置合并js和css文件</p><p>2：如有需要，对合并后的js文件执行browserify+babel打包</p></div><h3 id="文件目录结构" tabindex="-1"><a class="header-anchor" href="#文件目录结构"><span>文件目录结构</span></a></h3><p>在js目录下的common目录下存放公共的js文件，此处用jq举例</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>├── code-origin // 原始入口文件
│   ├── html
│      ├── index.html 
│      ├── common.html 
│      ├── xxxxx.html
│   ├── css
│      ├── index.css 
│      ├── common.css 
│      ├── xxxxx.css
│   ├── js
│      ├── common
│         ├── jquery-3.6.0.min.js
│      ├── index.js 
│      ├── common.js 
│      ├── xxxxx.js
├── code-mini   // 经过Gulp处理打包后的文件
├── .babelrc.json
├── concat.map.json
├── node_modules
└── .gitignore
└── gulpfile.js 
└── package.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gulpfile-js配置-有改动" tabindex="-1"><a class="header-anchor" href="#gulpfile-js配置-有改动"><span>gulpfile.js配置（有改动）</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> series<span class="token punctuation">,</span> parallel<span class="token punctuation">,</span> src<span class="token punctuation">,</span> dest <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gulp&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> gulpLoadPlugins <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gulp-load-plugins&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> htmlmin <span class="token operator">=</span> gulpLoadPlugins<span class="token punctuation">.</span>htmlmin<span class="token punctuation">;</span>
<span class="token keyword">const</span> uglify <span class="token operator">=</span> gulpLoadPlugins<span class="token punctuation">.</span>uglify<span class="token punctuation">;</span>
<span class="token keyword">const</span> cleanCss <span class="token operator">=</span> gulpLoadPlugins<span class="token punctuation">.</span>cleanCss<span class="token punctuation">;</span>
<span class="token keyword">const</span> babel <span class="token operator">=</span> gulpLoadPlugins<span class="token punctuation">.</span>babel<span class="token punctuation">;</span>
<span class="token keyword">const</span> concat <span class="token operator">=</span> gulpLoadPlugins<span class="token punctuation">.</span>concat<span class="token punctuation">;</span>
<span class="token keyword">const</span> rename <span class="token operator">=</span> gulpLoadPlugins<span class="token punctuation">.</span>rename<span class="token punctuation">;</span>

<span class="token keyword">const</span> browserify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;browserify&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> babelify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;babelify&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> autoprefixer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;autoprefixer&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> sourcemaps <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gulp-sourcemaps&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> postcss <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gulp-postcss&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> stripDebug <span class="token operator">=</span> gulpLoadPlugins<span class="token punctuation">.</span>stripDebug
<span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;vinyl-source-stream&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> buffer     <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;vinyl-buffer&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> del <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;del&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> enterFileName <span class="token operator">=</span> <span class="token string">&#39;code-origin&#39;</span>
<span class="token keyword">const</span> exportFileName <span class="token operator">=</span> <span class="token string">&#39;code-mini&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">miniHtml</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">src</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>enterFileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/**/*.html</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlmin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">collapseWhitespace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 压缩HTML</span>
      <span class="token literal-property property">collapseBooleanAttributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 省略布尔属性值</span>
      <span class="token literal-property property">removeTagWhitespace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 清除制表符的空白</span>
      <span class="token literal-property property">removeEmptyAttributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 清除 空的属性值</span>
      <span class="token literal-property property">removeComments</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 清除 HTML 中的注释</span>
      <span class="token literal-property property">removeScriptTypeAttributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 删除&lt;script&gt;的type=&quot;text/javascript&quot;</span>
      <span class="token literal-property property">removeStyleLinkTypeAttributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 删除&lt;style&gt;和&lt;link&gt;的type=&quot;text/css&quot;</span>
      <span class="token literal-property property">minifyJS</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 压缩 html文件中的 script</span>
      <span class="token literal-property property">minifyCSS</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 压缩 html文件中的 style</span>
      <span class="token literal-property property">minifyURLs</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>exportFileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">miniJs</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 此处举例中会生成.min.js 为了防止重新npm run build 故而不对.min.js文件做处理</span>
  <span class="token keyword">return</span> <span class="token function">src</span><span class="token punctuation">(</span>
    <span class="token punctuation">[</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>enterFileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/**/*.js</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">!</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>enterFileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/js/common/*.js</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">!</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>enterFileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/js/*.min.js</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">babel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">mangle</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// .pipe(stripDebug())</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>exportFileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 对原始js文件进行bundle打包</span>
<span class="token keyword">const</span> <span class="token function-variable function">bundleNormal</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">cb</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&quot;code-origin/js/index.js&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">rename</span><span class="token operator">:</span> <span class="token string">&quot;index.js&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token string">&quot;code-mini/js&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&quot;code-origin/js/common.js&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">rename</span><span class="token operator">:</span> <span class="token string">&quot;common.js&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token string">&quot;code-mini/js&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>

  options<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">option</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">bundle</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  cb <span class="token operator">&amp;&amp;</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 专门为concat合并之后的js打包（假设这些js都是需要bundle的）</span>
<span class="token keyword">const</span> <span class="token function-variable function">bundleConcat</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">cb</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> concatJs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./concat.map.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>js

  <span class="token comment">// 重新数据 拼接路径</span>
  <span class="token comment">// 也可以在这里剔除不需要执行bundle操作的js</span>
  <span class="token keyword">let</span> rebuildJs <span class="token operator">=</span> concatJs<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    item<span class="token punctuation">.</span>entry <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>originOutput<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>rename<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">return</span> item
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  rebuildJs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">option</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">bundle</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  cb <span class="token operator">&amp;&amp;</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 基础bundle方法</span>
<span class="token comment">// 三个参数：入口路径、新名称、输出路径</span>
<span class="token keyword">const</span> <span class="token function-variable function">bundle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">option</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">browserify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">entries</span><span class="token operator">:</span> option<span class="token punctuation">.</span>entry
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span>babelify<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">bundle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">source</span><span class="token punctuation">(</span>option<span class="token punctuation">.</span>rename<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">mangle</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// .pipe(stripDebug())</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">dest</span><span class="token punctuation">(</span>option<span class="token punctuation">.</span>output<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

exports<span class="token punctuation">.</span>bundle <span class="token operator">=</span> bundle

<span class="token keyword">const</span> <span class="token function-variable function">miniCss</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">src</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>enterFileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/**/*.css</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token comment">// .pipe(sourcemaps.init())</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">postcss</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
      <span class="token function">autoprefixer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">overrideBrowserslist</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;&gt; 1%&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;last 2 versions&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Firefox ESR&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token literal-property property">cascade</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">//  是否美化属性值</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// .pipe(sourcemaps.write(&#39;.&#39;))</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cleanCss</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 属性值：false|keep-breaks|beautify 默认false(压缩)</span>
      <span class="token literal-property property">inline</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;none&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 当 css文件中有 @import &#39;xxx.css&#39;语法时, 属性值为none则不将 xxx.css全部解析到当前的css文件</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>exportFileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">clean</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">del</span><span class="token punctuation">(</span>exportFileName<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">copy</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">enter<span class="token punctuation">,</span> output</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">src</span><span class="token punctuation">(</span>enter<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">dest</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 合并Js相关操作</span>
<span class="token comment">// 只合并 不做相关babel操作</span>
<span class="token comment">// Why? 为了统一在bundle中处理</span>
<span class="token keyword">const</span> <span class="token function-variable function">concatJs</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">cb</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./concat.map.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>js
  options<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">src</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>entry<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">rename</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>rename<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">dest</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>originOutput<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 在原始文件下也输出一份 保持开发和压缩后的文件代码同步</span>
      <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">dest</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>output<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  cb <span class="token operator">&amp;&amp;</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 合并Css相关操作</span>
<span class="token keyword">const</span> <span class="token function-variable function">concatCss</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">cb</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./concat.map.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>css
  options<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">src</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>entry<span class="token punctuation">)</span>
      <span class="token comment">// .pipe(sourcemaps.init())</span>
      <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">postcss</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token function">autoprefixer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">overrideBrowserslist</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;&gt; 1%&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;last 2 versions&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Firefox ESR&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token literal-property property">cascade</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">//  是否美化属性值</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token comment">// .pipe(sourcemaps.write(&#39;.&#39;))</span>
      <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cleanCss</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 属性值：false|keep-breaks|beautify 默认false(压缩)</span>
        <span class="token literal-property property">inline</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;none&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 当 css文件中有 @import &#39;xxx.css&#39;语法时, 属性值为none则不将 xxx.css全部解析到当前的css文件</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">dest</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>originOutput<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 在原始文件下也保存一份</span>
      <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">dest</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>output<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  cb <span class="token operator">&amp;&amp;</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> copyAll <span class="token operator">=</span> <span class="token function">copy</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>enterFileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/**</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>exportFileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

exports<span class="token punctuation">.</span>miniHtml <span class="token operator">=</span> miniHtml
exports<span class="token punctuation">.</span>miniJs <span class="token operator">=</span> miniJs
exports<span class="token punctuation">.</span>miniCss <span class="token operator">=</span> miniCss
exports<span class="token punctuation">.</span>clean <span class="token operator">=</span> clean

<span class="token comment">// 再合并之后再进行对合并后的js进行bundle操作</span>
exports<span class="token punctuation">.</span>default <span class="token operator">=</span> <span class="token function">series</span><span class="token punctuation">(</span>
  clean<span class="token punctuation">,</span>
  copyAll<span class="token punctuation">,</span>
  <span class="token function">parallel</span><span class="token punctuation">(</span>
    miniHtml<span class="token punctuation">,</span>
    miniJs<span class="token punctuation">,</span>
    miniCss<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">,</span>
  bundleNormal<span class="token punctuation">,</span>
  <span class="token function">parallel</span><span class="token punctuation">(</span>
    concatJs<span class="token punctuation">,</span>
    concatCss
  <span class="token punctuation">)</span><span class="token punctuation">,</span>
  bundleConcat<span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gulpfile-js同级目录新增-concat-map-json文件-为了合并配置便捷" tabindex="-1"><a class="header-anchor" href="#gulpfile-js同级目录新增-concat-map-json文件-为了合并配置便捷"><span>gulpfile.js同级目录新增 concat.map.json文件，为了合并配置便捷</span></a></h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p>由于concat可以合并css和js,此处都放在一起，路径需要补全</p><p>由于index.js中有使用require语法，所有originOutput和output都放在同级js文件下， 不然为了好区分，可以把路径设置如 code-origin/js/concat-mini 这种</p><p>后续需要合并其他，在此处增加即可</p></div><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;js&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;entry&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;code-origin/js/common.js&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;code-origin/js/index.js&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;rename&quot;</span><span class="token operator">:</span> <span class="token string">&quot;common-index.mini.js&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;originOutput&quot;</span><span class="token operator">:</span> <span class="token string">&quot;code-origin/js&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;output&quot;</span><span class="token operator">:</span> <span class="token string">&quot;code-mini/js&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;css&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;entry&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;code-origin/css/reset.css&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;code-origin/css/index.css&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;rename&quot;</span><span class="token operator">:</span> <span class="token string">&quot;reset-index.mini.css&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;originOutput&quot;</span><span class="token operator">:</span> <span class="token string">&quot;code-origin/css&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;output&quot;</span><span class="token operator">:</span> <span class="token string">&quot;code-mini/css&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="babelrc-json配置" tabindex="-1"><a class="header-anchor" href="#babelrc-json配置"><span>.babelrc.json配置</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;presets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@babel/preset-env&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span>
      <span class="token string">&quot;@babel/plugin-transform-runtime&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;absoluteRuntime&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;corejs&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;helpers&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;regenerator&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;7.0.0-beta.0&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="执行build" tabindex="-1"><a class="header-anchor" href="#执行build"><span>执行build</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> run build

<span class="token punctuation">[</span><span class="token number">23</span>:42:04<span class="token punctuation">]</span> Using gulpfile D:<span class="token punctuation">\\</span>arise-codes<span class="token punctuation">\\</span>gulp-es5-example<span class="token punctuation">\\</span>gulpfile.js
<span class="token punctuation">[</span><span class="token number">23</span>:42:04<span class="token punctuation">]</span> Starting <span class="token string">&#39;default&#39;</span><span class="token punctuation">..</span>.
<span class="token punctuation">[</span><span class="token number">23</span>:42:04<span class="token punctuation">]</span> Starting <span class="token string">&#39;clean&#39;</span><span class="token punctuation">..</span>.
<span class="token punctuation">[</span><span class="token number">23</span>:42:04<span class="token punctuation">]</span> Finished <span class="token string">&#39;clean&#39;</span> after <span class="token number">21</span> ms
<span class="token punctuation">[</span><span class="token number">23</span>:42:04<span class="token punctuation">]</span> Starting <span class="token string">&#39;&lt;anonymous&gt;&#39;</span><span class="token punctuation">..</span>.   
<span class="token punctuation">[</span><span class="token number">23</span>:42:04<span class="token punctuation">]</span> Finished <span class="token string">&#39;&lt;anonymous&gt;&#39;</span> after <span class="token number">57</span> ms
<span class="token punctuation">[</span><span class="token number">23</span>:42:04<span class="token punctuation">]</span> Starting <span class="token string">&#39;miniHtml&#39;</span><span class="token punctuation">..</span>.
<span class="token punctuation">[</span><span class="token number">23</span>:42:04<span class="token punctuation">]</span> Starting <span class="token string">&#39;miniJs&#39;</span><span class="token punctuation">..</span>.
<span class="token punctuation">[</span><span class="token number">23</span>:42:04<span class="token punctuation">]</span> Starting <span class="token string">&#39;miniCss&#39;</span><span class="token punctuation">..</span>.
<span class="token punctuation">[</span><span class="token number">23</span>:42:04<span class="token punctuation">]</span> Finished <span class="token string">&#39;miniHtml&#39;</span> after <span class="token number">175</span> ms
<span class="token punctuation">[</span><span class="token number">23</span>:42:05<span class="token punctuation">]</span> Finished <span class="token string">&#39;miniCss&#39;</span> after <span class="token number">829</span> ms      
<span class="token punctuation">[</span><span class="token number">23</span>:42:05<span class="token punctuation">]</span> Finished <span class="token string">&#39;miniJs&#39;</span> after <span class="token number">833</span> ms       
<span class="token punctuation">[</span><span class="token number">23</span>:42:05<span class="token punctuation">]</span> Starting <span class="token string">&#39;bundleNormal&#39;</span><span class="token punctuation">..</span>.
<span class="token punctuation">[</span><span class="token number">23</span>:42:05<span class="token punctuation">]</span> Finished <span class="token string">&#39;bundleNormal&#39;</span> after <span class="token number">8.27</span> ms
<span class="token punctuation">[</span><span class="token number">23</span>:42:05<span class="token punctuation">]</span> Starting <span class="token string">&#39;concatJs&#39;</span><span class="token punctuation">..</span>.
<span class="token punctuation">[</span><span class="token number">23</span>:42:05<span class="token punctuation">]</span> Starting <span class="token string">&#39;concatCss&#39;</span><span class="token punctuation">..</span>.
<span class="token punctuation">[</span><span class="token number">23</span>:42:05<span class="token punctuation">]</span> Finished <span class="token string">&#39;concatJs&#39;</span> after <span class="token number">3.2</span> ms  
<span class="token punctuation">[</span><span class="token number">23</span>:42:05<span class="token punctuation">]</span> Finished <span class="token string">&#39;concatCss&#39;</span> after <span class="token number">5.97</span> ms
<span class="token punctuation">[</span><span class="token number">23</span>:42:05<span class="token punctuation">]</span> Starting <span class="token string">&#39;bundleConcat&#39;</span><span class="token punctuation">..</span>.
<span class="token punctuation">[</span><span class="token number">23</span>:42:05<span class="token punctuation">]</span> Finished <span class="token string">&#39;bundleConcat&#39;</span> after <span class="token number">2.61</span> ms
<span class="token punctuation">[</span><span class="token number">23</span>:42:05<span class="token punctuation">]</span> Finished <span class="token string">&#39;default&#39;</span> after <span class="token number">938</span> ms
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="结果如下" tabindex="-1"><a class="header-anchor" href="#结果如下"><span>结果如下</span></a></h2><p>在html中引入concat生成后的js文件运行正常</p><figure><img src="`+p+'" alt="示例" width="500" height="300" tabindex="0" loading="lazy"><figcaption>示例</figcaption></figure>',22),c=[o];function i(l,u){return s(),a("div",null,c)}const d=n(e,[["render",i],["__file","08-gulp-concat.html.vue"]]),m=JSON.parse('{"path":"/pack/Gulp/08-gulp-concat.html","title":"Gulp配置篇--concat合并文件使用","lang":"zh-CN","frontmatter":{"title":"Gulp配置篇--concat合并文件使用","excerpt":"业精于勤，荒于嬉；行成于思，毁于随。-- 韩愈","sidebar":true,"tag":["Gulp"],"category":["Gulp"],"description":"依赖安装 concat插件简单使用举例 gulpfile.js 续接 07-gulp-babel-jquery 提示 目的： 1：通过配置合并js和css文件 2：如有需要，对合并后的js文件执行browserify+babel打包 文件目录结构 在js目录下的common目录下存放公共的js文件，此处用jq举例 gulpfile.js配置（有改动） ...","head":[["meta",{"property":"og:url","content":"https://arisemarcher.github.io/blog/blog/pack/Gulp/08-gulp-concat.html"}],["meta",{"property":"og:site_name","content":"御神"}],["meta",{"property":"og:title","content":"Gulp配置篇--concat合并文件使用"}],["meta",{"property":"og:description","content":"依赖安装 concat插件简单使用举例 gulpfile.js 续接 07-gulp-babel-jquery 提示 目的： 1：通过配置合并js和css文件 2：如有需要，对合并后的js文件执行browserify+babel打包 文件目录结构 在js目录下的common目录下存放公共的js文件，此处用jq举例 gulpfile.js配置（有改动） ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://arisemarcher.github.io/blog/blog/assets/images/gulp/concat-mini.png =500x300"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-17T10:31:16.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Gulp配置篇--concat合并文件使用"}],["meta",{"property":"article:tag","content":"Gulp"}],["meta",{"property":"article:modified_time","content":"2024-03-17T10:31:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Gulp配置篇--concat合并文件使用\\",\\"image\\":[\\"https://arisemarcher.github.io/blog/blog/assets/images/gulp/concat-mini.png =500x300\\"],\\"dateModified\\":\\"2024-03-17T10:31:16.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"依赖安装","slug":"依赖安装","link":"#依赖安装","children":[]},{"level":2,"title":"concat插件简单使用举例","slug":"concat插件简单使用举例","link":"#concat插件简单使用举例","children":[]},{"level":2,"title":"续接 07-gulp-babel-jquery","slug":"续接-07-gulp-babel-jquery","link":"#续接-07-gulp-babel-jquery","children":[{"level":3,"title":"文件目录结构","slug":"文件目录结构","link":"#文件目录结构","children":[]},{"level":3,"title":"gulpfile.js配置（有改动）","slug":"gulpfile-js配置-有改动","link":"#gulpfile-js配置-有改动","children":[]},{"level":3,"title":"gulpfile.js同级目录新增 concat.map.json文件，为了合并配置便捷","slug":"gulpfile-js同级目录新增-concat-map-json文件-为了合并配置便捷","link":"#gulpfile-js同级目录新增-concat-map-json文件-为了合并配置便捷","children":[]},{"level":3,"title":".babelrc.json配置","slug":"babelrc-json配置","link":"#babelrc-json配置","children":[]},{"level":3,"title":"执行build","slug":"执行build","link":"#执行build","children":[]}]},{"level":2,"title":"结果如下","slug":"结果如下","link":"#结果如下","children":[]}],"git":{"createdTime":1710142952000,"updatedTime":1710671476000,"contributors":[{"name":"arisemarcher","email":"2543061999@qq.com","commits":3}]},"readingTime":{"minutes":4.5,"words":1351},"filePathRelative":"pack/Gulp/08-gulp-concat.md","localizedDate":"2024年3月11日","autoDesc":true}');export{d as comp,m as data};
