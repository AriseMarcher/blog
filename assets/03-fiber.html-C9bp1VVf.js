import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-Btxhajri.js";const e="/blog/assets/images/react/fibel/3.png",p="/blog/assets/images/react/fibel/4.png",o={},l=t(`<h3 id="_1-开发环境配置" tabindex="-1"><a class="header-anchor" href="#_1-开发环境配置"><span>1. 开发环境配置</span></a></h3><h4 id="_1-1-文件夹结构" tabindex="-1"><a class="header-anchor" href="#_1-1-文件夹结构"><span>1.1 文件夹结构</span></a></h4><table><thead><tr><th>文件 / 文件夹</th><th>描述</th></tr></thead><tbody><tr><td>src</td><td>存储源文件</td></tr><tr><td>dist</td><td>存储客户端代码打包文件</td></tr><tr><td>build</td><td>存储服务端代码打包文件</td></tr><tr><td>server.js</td><td>存储服务器端代码</td></tr><tr><td>webpack.config.server.js</td><td>服务端 webpack 配置文件</td></tr><tr><td>webpack.config.client.js</td><td>客户端 webpack 配置文件</td></tr><tr><td>babel.config.json</td><td>babel 配置文件</td></tr><tr><td>package.json</td><td>项目工程文件</td></tr></tbody></table><p>创建 package.json 文件：<code>npm init -y</code></p><h4 id="_1-2-安装项目依赖" tabindex="-1"><a class="header-anchor" href="#_1-2-安装项目依赖"><span>1.2 安装项目依赖</span></a></h4><p>开发依赖：<code>npm install webpack@4 webpack-cli webpack-node-externals @babel/core @babel/preset-env @babel/preset-react babel-loader nodemon npm-run-all -D</code></p><p>项目依赖：<code>npm install express</code></p><table><thead><tr><th>依赖项</th><th>描述</th></tr></thead><tbody><tr><td>webpack</td><td>模块打包工具</td></tr><tr><td>webpack-cli</td><td>打包命令</td></tr><tr><td>webpack-node-externals</td><td>打包服务器端模块时剔除 node_modules 文件夹中的模块</td></tr><tr><td>@babel/core</td><td>JavaScript 代码转换工具</td></tr><tr><td>@babel/preset-env</td><td>babel 预置，转换高级 JavaScript 语法</td></tr><tr><td>@babel/preset-react</td><td>babel 预置，转换 JSX 语法</td></tr><tr><td>babel-loader</td><td>webpack 中的 babel 工具加载器</td></tr><tr><td>nodemon</td><td>监控服务端文件变化，重启应用</td></tr><tr><td>npm-run-all</td><td>命令行工具，可以同时执行多个命令</td></tr><tr><td>express</td><td>基于 node 平台的 web 开发框架</td></tr></tbody></table><h4 id="_1-3-环境配置" tabindex="-1"><a class="header-anchor" href="#_1-3-环境配置"><span>1.3 环境配置</span></a></h4><h5 id="_1-3-1-创建-web-服务器" tabindex="-1"><a class="header-anchor" href="#_1-3-1-创建-web-服务器"><span>1.3.1 创建 web 服务器</span></a></h5><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="token comment">// server.js</span>
<span class="token keyword">import</span> express <span class="token keyword">from</span> <span class="token string">&quot;express&quot;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token string">&quot;dist&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> template <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  &lt;html&gt;
    &lt;head&gt;
      &lt;title&gt;React Fiber&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
      &lt;div id=&quot;root&quot;&gt;&lt;/div&gt;
			&lt;script src=&quot;bundle.js&quot;&gt;&lt;/script&gt;
    &lt;/body&gt;
  &lt;/html&gt;
</span><span class="token template-punctuation string">\`</span></span>
app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;server is running&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-3-2-服务端-webpack-配置" tabindex="-1"><a class="header-anchor" href="#_1-3-2-服务端-webpack-配置"><span>1.3.2 服务端 webpack 配置</span></a></h5><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="token comment">// webpack.config.server.js</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> nodeExternals <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;webpack-node-externals&quot;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&quot;development&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&quot;./server.js&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&quot;server.js&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;build&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&quot;babel-loader&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">externals</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">nodeExternals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-3-3-babel-配置" tabindex="-1"><a class="header-anchor" href="#_1-3-3-babel-配置"><span>1.3.3 babel 配置</span></a></h5><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;presets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@babel/preset-env&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;@babel/preset-react&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-3-4-客户端-webpack-配置" tabindex="-1"><a class="header-anchor" href="#_1-3-4-客户端-webpack-配置"><span>1.3.4 客户端 webpack 配置</span></a></h5><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&quot;web&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&quot;development&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&quot;./src/index.js&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&quot;bundle.js&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;dist&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">&quot;source-map&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&quot;babel-loader&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-3-5-启动命令" tabindex="-1"><a class="header-anchor" href="#_1-3-5-启动命令"><span>1.3.5 启动命令</span></a></h5><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm-run-all --parallel dev:*&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;dev:server-compile&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack --config webpack.config.server.js --watch&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;dev:server&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodemon ./build/server.js&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;dev:client-compile&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack --config webpack.config.client.js --watch&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-requestidlecallback" tabindex="-1"><a class="header-anchor" href="#_2-requestidlecallback"><span>2. requestIdleCallback</span></a></h3><h4 id="_2-1-核心-api-功能介绍" tabindex="-1"><a class="header-anchor" href="#_2-1-核心-api-功能介绍"><span>2.1 核心 API 功能介绍</span></a></h4><p>利用浏览器的空余时间执行任务，如果有更高优先级的任务要执行时，当前执行的任务可以被终止，优先执行高级别任务。</p><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="token function">requestIdleCallback</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">deadline</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// deadline.timeRemaining() 获取浏览器的空余时间</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-浏览器空余时间" tabindex="-1"><a class="header-anchor" href="#_2-2-浏览器空余时间"><span>2.2 浏览器空余时间</span></a></h4><p>页面是一帧一帧绘制出来的，当每秒绘制的帧数达到 60 时，页面是流畅的，小于这个值时， 用户会感觉到卡顿</p><p>1s 60帧，每一帧分到的时间是 1000/60 ≈ 16 ms，如果每一帧执行的时间小于16ms，就说明浏览器有空余时间</p><p>如果任务在剩余的时间内没有完成则会停止任务执行，继续优先执行主任务，也就是说 requestIdleCallback 总是利用浏览器的空余时间执行任务</p><h4 id="_2-3-api-功能体验" tabindex="-1"><a class="header-anchor" href="#_2-3-api-功能体验"><span>2.3 API 功能体验</span></a></h4><p>页面中有两个按钮和一个DIV，点击第一个按钮执行一项昂贵的计算，使其长期占用主线程，当计算任务执行的时候去点击第二个按钮更改页面中 DIV 的背景颜色。</p><p>使用 requestIdleCallback 就可以完美解决这个卡顿问题。</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>playground<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>play<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>playground<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>work<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>start work<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>interaction<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>handle some user interaction<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">&lt;style&gt;
  .playground</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> palevioletred<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
&lt;/style&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="token keyword">var</span> play <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;play&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> workBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;work&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> interactionBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;interaction&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> iterationCount <span class="token operator">=</span> <span class="token number">100000000</span>
<span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token number">0</span>

<span class="token keyword">var</span> <span class="token function-variable function">expensiveCalculation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">IdleDeadline</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>iterationCount <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> IdleDeadline<span class="token punctuation">.</span><span class="token function">timeRemaining</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    value <span class="token operator">=</span>
      Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.5</span> <span class="token operator">?</span> value <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> value <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    iterationCount <span class="token operator">=</span> iterationCount <span class="token operator">-</span> <span class="token number">1</span>
  <span class="token punctuation">}</span>
  <span class="token function">requestIdleCallback</span><span class="token punctuation">(</span>expensiveCalculation<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

workBtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">requestIdleCallback</span><span class="token punctuation">(</span>expensiveCalculation<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

interactionBtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  play<span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> <span class="token string">&quot;palegreen&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-fiber" tabindex="-1"><a class="header-anchor" href="#_3-fiber"><span>3 Fiber</span></a></h3><h4 id="_3-1-问题" tabindex="-1"><a class="header-anchor" href="#_3-1-问题"><span>3.1 问题</span></a></h4><p>React 16 之前的版本比对更新 VirtualDOM 的过程是采用循环加递归实现的，这种比对方式有一个问题，就是一旦任务开始进行就无法中断，如果应用中组件数量庞大，主线程被长期占用，直到整棵 VirtualDOM 树比对更新完成之后主线程才能被释放，主线程才能执行其他任务。这就会导致一些用户交互，动画等任务无法立即得到执行，页面就会产生卡顿, 非常的影响用户体验。</p><p>核心问题：递归无法中断，执行重任务耗时长。 JavaScript 又是单线程，无法同时执行其他任务，导致任务延迟页面卡顿，用户体验差。</p><h4 id="_3-2-解决方案" tabindex="-1"><a class="header-anchor" href="#_3-2-解决方案"><span>3.2 解决方案</span></a></h4><ol><li>利用浏览器空闲时间执行任务，拒绝长时间占用主线程</li><li>放弃递归只采用循环，因为循环可以被中断</li><li>任务拆分，将任务拆分成一个个的小任务</li></ol><h4 id="_3-3-实现思路" tabindex="-1"><a class="header-anchor" href="#_3-3-实现思路"><span>3.3 实现思路</span></a></h4><p>在 Fiber 方案中，为了实现任务的终止再继续，DOM比对算法被分成了两部分：</p><ol><li>构建 Fiber (可中断)</li><li>提交 Commit (不可中断)</li></ol><p>DOM 初始渲染: virtualDOM -&gt; Fiber -&gt; Fiber[] -&gt; DOM</p><p>DOM 更新操作: newFiber vs oldFiber -&gt; Fiber[] -&gt; DOM</p><h4 id="_3-4-fiber-对象" tabindex="-1"><a class="header-anchor" href="#_3-4-fiber-对象"><span>3.4 Fiber 对象</span></a></h4><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="token punctuation">{</span>
  type         <span class="token function">节点类型</span> <span class="token punctuation">(</span>元素<span class="token punctuation">,</span> 文本<span class="token punctuation">,</span> 组件<span class="token punctuation">)</span><span class="token punctuation">(</span>具体的类型<span class="token punctuation">)</span>
  props        节点属性
  stateNode    节点 <span class="token constant">DOM</span> 对象 <span class="token operator">|</span> 组件实例对象
  tag          <span class="token function">节点标记</span> <span class="token punctuation">(</span>对具体类型的分类 hostRoot <span class="token operator">||</span> hostComponent <span class="token operator">||</span> classComponent <span class="token operator">||</span> functionComponent<span class="token punctuation">)</span>
  effects      数组<span class="token punctuation">,</span> 存储需要更改的 fiber 对象
  effectTag    当前 Fiber <span class="token function">要被执行的操作</span> <span class="token punctuation">(</span>新增<span class="token punctuation">,</span> 删除<span class="token punctuation">,</span> 修改<span class="token punctuation">)</span>
  parent       当前 Fiber 的父级 Fiber
  child        当前 Fiber 的子级 <span class="token function">Fiber</span> <span class="token punctuation">(</span>第一个<span class="token punctuation">)</span>
  sibling      当前 Fiber 的下一个兄弟 Fiber
  alternate    Fiber 备份 fiber 比对时使用
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+e+'" alt="示例" width="500" height="300" tabindex="0" loading="lazy"><figcaption>示例</figcaption></figure><p>virtualDOM生成fiber顺序如下： <img src="'+p+'" alt="示例" width="500" height="300" loading="lazy"></p>',48),c=[l];function i(r,u){return s(),a("div",null,c)}const b=n(o,[["render",i],["__file","03-fiber.html.vue"]]),v=JSON.parse('{"path":"/frame/React/03-fiber.html","title":"React-- Fiber","lang":"zh-CN","frontmatter":{"title":"React-- Fiber","sidebar":true,"excerpt":"天空虽不曾留下遗迹，但我已飞过。-- 泰戈尔","tag":["react"],"category":["react"],"description":"1. 开发环境配置 1.1 文件夹结构 创建 package.json 文件：npm init -y 1.2 安装项目依赖 开发依赖：npm install webpack@4 webpack-cli webpack-node-externals @babel/core @babel/preset-env @babel/preset-react bab...","head":[["meta",{"property":"og:url","content":"https://arisemarcher.github.io/blog/blog/frame/React/03-fiber.html"}],["meta",{"property":"og:site_name","content":"御神"}],["meta",{"property":"og:title","content":"React-- Fiber"}],["meta",{"property":"og:description","content":"1. 开发环境配置 1.1 文件夹结构 创建 package.json 文件：npm init -y 1.2 安装项目依赖 开发依赖：npm install webpack@4 webpack-cli webpack-node-externals @babel/core @babel/preset-env @babel/preset-react bab..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://arisemarcher.github.io/blog/blog/assets/images/react/fibel/3.png =500x300"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-12T06:08:07.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"React-- Fiber"}],["meta",{"property":"article:tag","content":"react"}],["meta",{"property":"article:modified_time","content":"2024-03-12T06:08:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"React-- Fiber\\",\\"image\\":[\\"https://arisemarcher.github.io/blog/blog/assets/images/react/fibel/3.png =500x300\\",\\"https://arisemarcher.github.io/blog/blog/assets/images/react/fibel/4.png =500x300\\"],\\"dateModified\\":\\"2024-03-12T06:08:07.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"1. 开发环境配置","slug":"_1-开发环境配置","link":"#_1-开发环境配置","children":[]},{"level":3,"title":"2. requestIdleCallback","slug":"_2-requestidlecallback","link":"#_2-requestidlecallback","children":[]},{"level":3,"title":"3 Fiber","slug":"_3-fiber","link":"#_3-fiber","children":[]}],"git":{"createdTime":1710141840000,"updatedTime":1710223687000,"contributors":[{"name":"arisemarcher","email":"2543061999@qq.com","commits":4}]},"readingTime":{"minutes":4.47,"words":1340},"filePathRelative":"frame/React/03-fiber.md","localizedDate":"2024年3月11日","autoDesc":true}');export{b as comp,v as data};
